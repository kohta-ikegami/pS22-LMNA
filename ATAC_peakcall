# This is to demonstrate how I call ATAC peaks
# I think this follows what Tao described in his github.


# 1) Make replicate-combined PM100 bedgraph (for signal)

samtools merge -u - [rep1_sorted.bam] [rep2_sorted.bam] | 
atacbamToCutdens.sh - ~/hg19k1sort 38 100 1 [cutdensPM100.bg]


# 2) Make replicate-combined PM5000 bedgraph (for background)

samtools merge -u - [rep1_sorted.bam] [rep2_sorted.bam] | 
atacbamToCutdens.sh - ~/hg19k1sort 38 5000 1 [cutdensPM5K.bg]

# 3) Make lambda file

## 3.1) Get number of reads (not pairs) used in cutdens

samtools view [rep1_sorted.bam] | 
awk '$6 == "38M"' | wc -l > [rep1_readnum.txt]

samtools view [rep2_sorted.bam] | 
awk '$6 == "38M"' | wc -l > [rep2_readnum.txt]

## 3.2) Genome background (read #) x (fragment length 200 bp)/genome size

[genome background (numeric)] = ([rep1_readnum] + [rep2_readnum]) * 200/[genome size]

## 3.3) Construct local_lambda from cutdensPM5K data
## First, fill non-mapped regions with 0 (using unionbedg with chromosome file)
## Second, multiply the score by 0.02 (PM100/PM5K) if the score is greater than [genome background], else replace with [genome background].

awk '{OFS="\t"; print $1, 0, $2, 0}' [genome file] | 
bedtools unionbedg -i stdin [cutdensPM5K.bg] |
awk '{OFS="\t"; print $1, $2, $3, $4+$5}' |
awk 'BEGIN{gb=[genome background]} {if($4*0.02 > gb){printf "%s\t%s\t%s\t%.1f\n", $1, $2, $3, $4*0.02} else {printf "%s\t%s\t%s\t%.1f\n", $1, $2, $3, gb} }' |
mergebg.sh - > [local_lambda.bg]

# 4) Generate p-value bedgraph

module load MACS2/2.1.0
macs2 bdgcmp -t [cutdensPM100.bg] -c [local_lambda.bg] -m ppois -o [cutdensPM100_vs_lambda_pv.bg]

# 5) Call peak
module load MACS2/2.1.0
macs2 bdgpeakcall -i [cutdensPM100_vs_lambda_pv.bg] -g 50 --no-trackline --ofile [peak.narrowPeak]

### These output files do not contain p-values. Will get those later.

# 6) Generate FE bedgraph file (over lambda)

bedtools unionbedg -i [cutdensPM100.bg] [local_lambda.bg] | 
awk '{printf "%s\t%s\t%s\t%.3f\n", $1,$2,$3,$4/$5}' | 
mergebg.sh - > temp.unclipfebg
	
bedClip temp.unclipfebg [genome file] [cutdensPM100_fe.bg]

bedGraphToBigWig ATAC_BJ5ta_t540t542_cutdensPM100_fe.bg ~/hg19BAMsort ATAC_BJ5ta_t540t542_cutdensPM100_fe.bw

### mergebg.sh is deposited.
### bedClip and bedGraphToBigWig are from Kent's UCSC tools 343.


# 6) For each peak, get p-value and fe

## 6.1) Get chromosome order
chromcheck.sh [cutdensPM100_vs_lambda_pv.bg] 10 > [chrom order of pv.bg]

## 6.2) Reorder genome file by [chrom order of pv.bg]
orderbed.sh [genome file] [chrom order of pv.bg] --no_error > chrom.temp

## 6.3) get p-value
orderbed.sh [peaks.narrowPeak] [chrom order of pv.bg] | 
bedtools map -a stdin -b [cutdensPM100_vs_lambda_pv.bg] -c 4 -o max -sorted -g chrom.temp | 
sort -k1,1 -k2,2n > [peaks_pv.narrowPeak]

# 7) For each peak, get fe

## 7.1) Get chromosome order
chromcheck.sh [cutdensPM100_fe.bg] 10 > [chrom order of fe.bg]

## 7.2) Reorder genome file by [chrom order of fe.bg]
orderbed.sh [genome file] [chrom order of fe.bg] --no_error > chrom.temp

## 7.3) get fe
orderbed.sh [peaks.narrowPeak] [chrom order of fe.bg] | 
bedtools map -a stdin -b [cutdensPM100_fe.bg] -c 4 -o max -sorted -g chrom.temp | 
sort -k1,1 -k2,2n > [peaks_fe.narrowPeak]

